apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: null
  generation: 1
  labels:
    run: dbapi
  name: dbapi
  selfLink: /apis/extensions/v1beta1/namespaces/default/deployments/dbapi
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      run: dbapi
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: dbapi
    spec:
      volumes:
      - name: secretvolume
        secret:
          secretName: dbconfig
      - name: cloudsql-instance-credentials
        secret:
          secretName: cloudsqlproxy    
      containers:
      - image: eu.gcr.io/jobsearch-225012/dbapi:latest
        imagePullPolicy: Always
        name: dbapi
        ports:
        - containerPort: 8080
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File       
        env:
        - name: CLOUDSQL_USERNAME_URL
          valueFrom:
            secretKeyRef:
              name: dbconfig
              key: username
        - name: CLOUDSQL_PASSWORD_URL
          valueFrom:
            secretKeyRef:
              name: dbconfig
              key: password
        - name: CLOUDSQL_JDBC_URL
          valueFrom:
            secretKeyRef:
              name: dbconfig
              key: jdbc
      - name: cloudsql-proxy     
        image: gcr.io/cloudsql-docker/gce-proxy:1.11
        command: ["/cloud_sql_proxy",
                "-instances=jobsearch-225012:europe-west1:jobdatastore=tcp:5432",
                "-credential_file=/secrets/cloudsql/cloudsqlclient.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        volumeMounts:
          - name: cloudsql-instance-credentials
            mountPath: /secrets/cloudsql
            readOnly: true       
      dnsPolicy: ClusterFirst      
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30           
status: {}
